
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Readme for Summer Irrigated Cropping Area workflow (tailored for NMDB analysis, 08/07/2019)

    - An explanation of the output filenames are at the bottom of this readme
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

1. Use Datacube Stats to create seasonal composite of maximum NDVI. 
	For example, the following .yaml file creates summer seasonal composites
	for the area encompassed by the shapefile 'MDB_plus_NSW.shp'
		
		/g/data/r78/cb3058/dea-notebooks/dcStats/mdbNSW_DCstats_summer.yaml
		
	This .yaml file exports tile-based geotiffs for every tile contained within the
	extent of the shapefile.

2. Using the 'sort_dcstats_results.ipynb' notebook, sort the tile-based results into folders
	labelled by the year. Instructions are contained in the notebook.
	
		/g/data/r78/cb3058/dea-notebooks/dcStats/sort_dcstats_results.ipynb

3. Run the 'build_vrt_and_mosaic.py' script to generate mosaics of the seasonal composites.
	This helps the subsequent scripts which rely on a single mosaicked geotiff 
	for processes like image segmentation.
	
		/g/data/r78/cb3058/dea-notebooks/dcStats/build_vrt_and_mosaic.py

4. Run 'clip_ndvi_max.py' which clips the geotiffs from step 3 to an AOI, using
	a provided shapefile. The script requires you place all the mosaicked
	geotiffs into a single folder.  This script was initialy a part of the script in step 5
	but there were problems with GDAL not being 100% thread-safe when run on the megamem queue.
	This script has been written to work with the specific file naming structure that
	I use so it can be finicky if you're deviating from that.  You'll likely need 
	to change the first few lines of code in the 'clip_extent' function that set up the strings
	for the input and output filenames.
	
		/g/data/r78/cb3058/dea-notebooks/ICE_project/clip_ndvi_max.py

5. Run 'SICA_parallel_nmdb.py'. This does the bulk of the analysis by pulling in the 
	clipped NDVI maximum geotiff from step 4 and running the image segmentation, thresholding
	the zonal stats over the segments, and filtering by area.  
	This script is run on megamem and is parallelized using the GNU Parallel library.
	It therefore requires you generate a text file of the input geotiff filenames which is then called
	in the qsub submission script.
	
		/g/data/r78/cb3058/dea-notebooks/ICE_project/SICA_parallel_nmdb.py
		/g/data/r78/cb3058/dea-notebooks/ICE_project/run_SICA.sh

6. The results of step 5 produce files called e.g. '<AOI>__<Season+Year>_80polys10ha.shp'
	These files contain only the polygons that achieved a zonally averaged threshold of >= 0.8 NDVI
    and are larger than 10ha in size.
	Using a rainfall anomaly timeseries from BOM for the AOI, open the anomalously dry and
	very-close-to-average years in ArcGIS and merge them to form a single file (ArcGIS is
	very fast at this but QGIS and python libraries are prohibitevly slow).
	This file will later be used as a mask to filter out errors from the results generated by
	step 5.
	
7. Using a good basemap, manually curate egregious commission errors contained in the 
	'<AOI>_80mask_allDryYears_merged.shp' file.  Typically these will be plantation forests
	and highlands grasslands in regions closer to the coast. There are also 'tractor tread'
    artefacts from geometric errors in the LS5 satellite data that need to be deleted.

8. Run 'mask_results.py' which applies the curated mask from step 7 over the 'multithreshold.tif' output
	from step 5.  The results from this script have a suffix called '_Irrigated_<mask>.shp'. These are your
	final results from the analysis.
	
	/g/data/r78/cb3058/dea-notebooks/ICE_project/mask_results.py
	
9.	Using the 'inspect_resuts.ipynb' notebook, generate plots showing the time-series of annual irrigated area
    and cumulative irrigable area.
	Plots can be created for the whole catchment, and/or for subcatchments if shapefiles of the subcatchments
	are available.
	
 
!!!!!!!!!!!!!!!
Filename Index:
!!!!!!!!!!!!!!!
<AOI>_<Season+Year>_sheperdSEG.kea
    This file contains the results of the image segmentation algorithm provided with the RSGISlib library.
    It is the output of applying image segmentation over the seasonal composite of Maximum NDVI.

<AOI>_<Season+Year>_ClumpMean.kea
    This file is the same as the sheperdSEG file but the segments have the zonal mean NDVI as an
    attribute. This file is the input to creating the multithreshold.tif

<AOI>_<Season+Year>_multithreshold.tif
    This raster contains the segments that have a zonal mean NDVI greater than the various thresholds.
    e.g. 0.7 > NDVI > 0.65 then raster = 65; 0.8 > NDVI > 0.75 then raster = 75, etc.

<AOI>_<Season+Year>_multithreshold_masked.tif
    This raster is the results of applying the 'allDryYears' mask over the multithreshold.tif

<AOI>_<Season+Year>_80polys_10ha.shp
    Contains polygons that achieve a segement zonal average >=0.8 NDVI and are > 10ha < 5000ha.
    These are the polygons used to create the 'allDryYears' mask
    
<AOI>_<Season+Year>_Irrigated_<mask>.shp
    These are the final results of the analysis and are generated by applying the 'allDryYears' mask
    over the multithreshold.tif. The polygons contain two attributes, the zonal mean NDVI and the area in m2
    

    

    

    





